name: Snyk Security

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  snyk:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        
      - name: Set up Snyk CLI to check for security issues
        # Break the build when it detects security issues and upload the SAST issues to GitHub Code Scanning
        uses: snyk/actions/setup@806182742461562b67788a64410098c9d9b96adb

        # Set up the development environment for your application's dependencies
#       - name: Install dependencies
#         run: npm install 
# ...
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          architecture: 'x64'

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=/usr/lib/jvm/adopt@17" >> $GITHUB_ENV


      - name: Run Snyk to check for vulnerabilities (Discovery Service)
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: 'test'
          args: '--all-projects --sarif-file-output=snyk-discovery.sarif'
          directory: backend-application/discovery-service

      - name: Run Snyk to check for vulnerabilities (Cloud Gateway Service)
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: 'test'
          args: '--all-projects --sarif-file-output=snyk-cloud-gateway.sarif'
          directory: backend-application/cloud-gateway-service

      - name: Run Snyk to check for vulnerabilities (Favourite Service)
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: 'test'
          args: '--all-projects --sarif-file-output=snyk-favourite.sarif'
          directory: backend-application/favourite-service

      - name: Snyk Code test (Discovery Service)
        run: |
          cd backend-application/discovery-service
          snyk code test --sarif-file-output=snyk-code-discovery.sarif

      - name: Snyk Code test (Cloud Gateway Service)
        run: |
          cd backend-application/cloud-gateway-service
          snyk code test --sarif-file-output=snyk-code-cloud-gateway.sarif

      - name: Snyk Code test (Favourite Service)
        run: |
          cd backend-application/favourite-service
          snyk code test --sarif-file-output=snyk-code-favourite.sarif
...


        
#       - name: Run Snyk to check for vulnerabilities
#         uses: snyk/actions/maven@master
#         env:
#           # Snyk API token created with your Snyk account
#           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#         with:
#           args: --sarif-file-output=snyk.sarif

#         # Run Snyk Code (SAST) analysis and uploads result into GitHub
#         # Use || true to not fail the pipeline
#       - name: Snyk Code test
#         run: |
#           cd /backend-application/discovery-service
#           snyk code test --sarif > snyk-code.sarif || true
#           snyk test --maven-aggregate-project

#         # Run Snyk Open Source (SCA) analysis and uploads result to Snyk
#       - name: Snyk Open Source monitor
#         run: snyk monitor --all-projects
#         env:
#           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

        # Build the docker image for testing
#       - name: Build docker image
#         run: docker build -t oluwajoba/clinic-finder .

#       - name: Security scan on docker image
#         uses: snyk/actions/docker@master
#         id: docker-image-scan
#         continue-on-error: true
#         env:
#           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#         with:
#           image: oluwajoba/:latest --file=Dockerfile
          
      # Run Snyk Container (Container and SCA) analysis and uploads result to Snyk
#       - name: Snyk Container monitor
#         run: snyk container monitor oluwajoba/clinic-finder:latest --file=Dockerfile
#         env:
#           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

#       - name: Upload sarif file to Github Code Scanning
#         if: always()
#         uses: github/codeql-action/upload-sarif@v2
#         with:
#           sarif_file: snyk.sarif

#       - name: Publish docker image
#         if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
#         run: docker push --all-tags registry-host:3000/oluwajoba/
