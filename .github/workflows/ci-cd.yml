# .github/workflows/ci-cd.yml

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-discovery-service:
#     needs: [start-zipkin]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
#       - name: Set up JDK 17
#         uses: actions/setup-java@v2
#         with:
#           java-version: '17'
#           distribution: 'adopt'
#           architecture: 'x64'
#           check-latest: false
#           server-id: 'github'
#           server-username: ${{ github.actor }}
#           server-password: ${{ secrets.GITHUB_TOKEN }}
#           overwrite-settings: true
#           job-status: 'success'

#       - name: Build Discovery Service
#         run: cd backend-application/discovery-service && mvn clean install

  build-cloud-gateway-service:
#     needs: [start-zipkin, build-discovery-service]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

#       - name: Set up JDK 17
#         uses: actions/setup-java@v2
#         with:
#           java-version: '17'
#           distribution: 'adopt'
#           architecture: 'x64'
#           check-latest: false
#           server-id: 'github'
#           server-username: ${{ github.actor }}
#           server-password: ${{ secrets.GITHUB_TOKEN }}
#           overwrite-settings: true
#           job-status: 'success'

#       - name: Build Cloud Gateway Service
#         run: cd ./backend-application/cloud-gateway-service && mvn clean install

  build-favourite-service:
#     needs: [start-zipkin, build-discovery-service, build-cloud-gateway-service]
    runs-on: ubuntu-latest
    services:
      zipkin:
        image: openzipkin/zipkin
        ports:
          - 9411:9411
      
#       mysql-favourite-db:
#         image: mysql:8
#         env:
#           MYSQL_ROOT_PASSWORD: password
#           MYSQL_DATABASE: favourite
#         ports:
#           - 33061:3306
#         options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      mysql-favourite-db:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
        ports:
        - 33061:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          architecture: 'x64'
          check-latest: false
          server-id: 'github'
          server-username: ${{ github.actor }}
          server-password: ${{ secrets.GITHUB_TOKEN }}
          overwrite-settings: true
          job-status: 'success'
          
      - name: Verify MySQL connection from host
        run: |
          mysql --host mysql-favourite-db --port 33061 -uroot -ppassword -e "SHOW DATABASES"
      - name: Build Favourite Service
        env:
          MYSQL_HOST: mysql-favourite-db
          MYSQL_PORT: 3306
          MYSQL_USER: root
          MYSQL_PASSWORD: password
        run: |
            sleep 30 # Delay for 10 seconds
            cd backend-application/favourite-service && mvn clean install
    
#   start-zipkin:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Start Zipkin
#         run: docker run -d --name zipkin -p 9412:9411 openzipkin/zipkin

#   start-mysql-favourite-db:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Start MySQL Favourite DB
#         run: docker run -d --name mysql-favourite-db -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=favourite -p 33061:3306 mysql:8 --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3


  push-to-docker-hub:
    needs: [build-discovery-service, build-cloud-gateway-service, build-favourite-service]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          docker-compose build
          docker-compose push
